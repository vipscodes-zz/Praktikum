package permasalahan2test;

public class Operasi {
	private Stack stack = new Stack();
	private String input;
	
	public Operasi(String input) {
		this.input = input;
	}
	public String toPostfix() {
		String output = "";
		for (int index = 0; index < input.length(); ++index) {
			char ch = input.charAt(index);
			switch(ch) {
				case '(': 
						  stack.push('('); break;
				case ')': 
						  Character dataTop = (Character) stack.top();
						  while (!(dataTop.equals('(')) && !(stack.isEmpty())) {
			                    stack.pop();
			                    output += dataTop.charValue();
			                    if (!stack.isEmpty()) {
			                        dataTop = (Character) stack.top();
			              		}
			              		stack.pop();
						  }
				case '+':
				case '-': 
	                	  if (stack.isEmpty()) {
	                		  stack.push(ch);
	                	  } else {
	                		  Character dataTop1 = (Character) stack.top();
	                		  while (!(stack.isEmpty() || dataTop1.equals(('(')) ||  dataTop1.equals((')')))) {
	                			  dataTop1 = (Character) stack.pop();
	                			  output += dataTop1.charValue();
	                		  }
	                		  stack.push(ch);
	                	  }
	                	  break;
				case '*':
						if (stack.isEmpty()) {
							  stack.push(ch);
						  } else {
							  Character dataTop1 = (Character) stack.top();
							  while (!dataTop1.equals(('(')) && !dataTop1.equals(('+')) && !dataTop1.equals(('-')) && !stack.isEmpty()) {
								  dataTop1 = (Character) stack.pop(); 
								  output += dataTop1.charValue();
							  }
							  stack.push(ch);
						  
						  }
						  break;
				case '/':
						  if (stack.isEmpty()) {
							  stack.push(ch);
						  } else {
							  Character dataTop1 = (Character) stack.top();
							  while (!dataTop1.equals(('(')) && !dataTop1.equals(('+')) && !dataTop1.equals(('-')) && !stack.isEmpty()) {
								  dataTop1 = (Character) stack.pop(); 
								  output += dataTop1.charValue();
							  }
							  stack.push(ch);
						  
						  }
						  break;
				default : output += ch; break;
		    }
			while (!stack.isEmpty()) {
				Character dataTop1 = (Character) stack.top();
	            if (!dataTop1.equals(('('))) {
	                stack.pop();
	                output += dataTop1.charValue();
	            }
	        }
		}
		return output;
	}
	
}
